///$tab PopulateVariables
SUB Qvc.PopulateVariables (_vartable, _useLET)
/**
@source Qvc_PopulateVariables.qvs
Populate variables from a two column table.

Column 1 of the table contains variable names. The variables will be SET to the contents of column 2 on the corressponding row. 

If optional parameter 2 is set to true (-1), then the variable assignment will be made using the LET statement instead of SET.

@param 1 String. Table of variable name/value pairs to populate from. Field 1 of the table contains variable names, field 2 variable values.
@param 2 True/False (-1/0). If true, use LET statement to assign variable values. Oterwise use SET.

@syntax CALL Qvc.PopulateVariables('vartable', [useLET]); 
*/
UNQUALIFY "_qvctemp.*";	// UNQUALIFY all qvctemp fields

LET _useLET = if(len('$(_useLET)')=0, 0, -1);	// Default for useLET is false

LET _qvctemp.varname_field = FieldName(1,'$(_vartable)');	// Get variable name
LET _qvctemp.varvalue_field = FieldName(2,'$(_vartable)');

FOR _qvctemp.idx = 0 to NoOfRows('$(_vartable)')-1;
	// Get the varname for this row
	LET _qvctemp.varname = peek('$(_qvctemp.varname_field)',$(_qvctemp.idx),'$(_vartable)');
	
	// Set the variable value
	IF $(_useLET) THEN		// If LET requested, the variable will be evaluated
		LET _qvctemp.varvalue = peek('$(_qvctemp.varvalue_field)',$(_qvctemp.idx),'$(_vartable)');
		LET $(_qvctemp.varname)=$(_qvctemp.varvalue);	
	ELSE					// Else use SET
		// peek will extract the value as is from the table
		LET [$(_qvctemp.varname)]=peek('$(_qvctemp.varvalue_field)',$(_qvctemp.idx),'$(_vartable)');
	ENDIF
NEXT _qvctemp.idx;	

SET _qvctemp.idx=;
SET _qvctemp.varname_field=;
SET _qvctemp.varvalue_field=;
SET _qvctemp.varname=;
SET _qvctemp.varvalue=;

END SUB

