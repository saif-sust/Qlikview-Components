///$tab ExportModel
SUB Qvc.ExportModel (_qvddir, _qvdname, _addTimestamp)
/**
@source Qvc_ExportModel.qvs
Export all tables to a single QVD. 

@param 1 String. Optional. Relative or absolute directory where the model QVD will be stored. If relative, it follows the same rules as the STORE script statement for relative directory.
@param 2 String, Optional. Name for the model QVD. If omitted, the name of the QVW will be used. For example, if QVW is "Sales.qvw", then QVD will be "Sales.qvd".
@param 3 String, Optional. 1/0 True/False. If True, a timestamp of the form _YYYYMMDDhhmmss will be appended to the QVD name. Default if omitted is False.

@syntax CALL Qvc.ExportModel(['qvddir'],['qvdname'],['addTimestamp']);
*/
UNQUALIFY "_qvctemp.*";	// UNQUALIFY all qvctemp fields

LET _qvctemp.TableName=left(DocumentName(),len(DocumentName())-4);		// Table name is document name

//Set default values for params if not passed
LET _qvctemp.qvddir = if(len('$(_qvddir)')=0, '', '$(_qvddir)');
// Add the ending \ if the passed path is missing it
IF len('$(_qvctemp.qvddir)')>0 AND NOT right(_qvctemp.qvddirqvddir,1)='\' THEN
	LET _qvctemp.qvddir = _qvctemp.qvddir & '\';
END IF

LET _qvctemp.addTimestamp = if(len('$(_addTimestamp)')=0, 0, '$(_addTimestamp)');

LET _qvctemp.qvdname = if(len('$(_qvdname)')=0, '$(_qvctemp.TableName)', '$(_qvdname)');
IF '$(_qvctemp.addTimestamp)' THEN 
	LET _qvctemp.qvdname = '$(_qvctemp.qvdname)' & '_' & Timestamp(now(1),'YYYYMMDDhhmmss');
ENDIF

[$(_qvctemp.TableName)]:
LOAD 1 as _qvctemp.DummyField AutoGenerate 0;
FOR _qvctemp.i = NoOfTables()-1 to 0 step -1
	LET _qvctemp.vTable = TableName($(_qvctemp.i));
	SET _qvctemp.vFieldList=;
	FOR _qvctemp.j = 1 to NoOfFields('$(_qvctemp.vTable)')
		LET _qvctemp.vFieldList= '$(_qvctemp.vFieldList)' & ',' & '[' & FieldName($(_qvctemp.j),'$(_qvctemp.vTable)') & ']';
		
	NEXT _qvctemp.j
	Concatenate ([$(_qvctemp.TableName)])
	LOAD 
		'[$(_qvctemp.vTable)]' as Qvc.ExportModel.TableName,
	 	mid('$(_qvctemp.vFieldList)',2) as Qvc.ExportModel.FieldNames,
		*
	Resident [$(_qvctemp.vTable)];
NEXT _qvctemp.i

// Clean variables
SET _qvctemp.i=;
SET _qvctemp.j=;
SET _qvctemp.vTable=;
SET _qvctemp.vFieldList=;

DROP FIELD _qvctemp.DummyField FROM [$(_qvctemp.TableName)];

STORE [$(_qvctemp.TableName)] INTO [$(_qvctemp.qvddir)$(_qvctemp.qvdname).qvd] (qvd);
SET vModelQvdName=;		// Clear variable

DROP TABLE [$(_qvctemp.TableName)];

// Clean up temp variables
SET _qvctemp.TableName=;
SET _qvctemp.qvddir=;
SET _qvctemp.qvdname=;
SET _qvctemp.addTimestamp=;
	
END SUB
///$tab ImportModel
SUB Qvc.ImportModel (_modelQvd)
/**
@source Qvc_ExportModel.qvs
Import a data model created by Qvc.ExportModel. 

@param 1 String. Relative or absolute path to a QVD generated by Qvc.ExportModel.

@syntax CALL Qvc.ImportModel('modelQvd');
*/
UNQUALIFY "_qvctemp.*";	// UNQUALIFY all qvctemp fields

_qvctemp.TempTableNames:
LOAD DISTINCT 
	[Qvc.ExportModel.TableName], 
	[Qvc.ExportModel.FieldNames]
FROM [$(_modelQvd)] (qvd);

FOR _qvctemp.tableidx = 0 to NoOfRows('_qvctemp.TempTableNames')-1
	LET _qvctemp.TableName=Peek('Qvc.ExportModel.TableName', $(_qvctemp.tableidx), '_qvctemp.TempTableNames');
	LET _qvctemp.FieldNames=Peek('Qvc.ExportModel.FieldNames', $(_qvctemp.tableidx), '_qvctemp.TempTableNames');
	
	$(_qvctemp.TableName):
	LOAD $(_qvctemp.FieldNames)
	FROM [$(_modelQvd)] (qvd)
	WHERE [Qvc.ExportModel.TableName]='$(_qvctemp.TableName)';
	
NEXT _qvctemp.tableidx

DROP TABLE _qvctemp.TempTableNames;	

END SUB